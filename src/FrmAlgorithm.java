  /*
Created by Conner Recoskie
May 19th, 2022
This program excepts a value for factorial, prime, and fibonacci. It then output
the factorial of the number inputted, it outputs if the number inputted is prime
or not, and it outputs the corresponding fibonacci number to the number inputted
.
*/

public class FrmAlgorithm extends javax.swing.JFrame {
    
    // Declaring long variables to be used in the factorial question.
    long factorial; 
    long factorialInput;
    
    // Declaring a boolean and an integer variable for the prime question.
    boolean prime;
    int primeInput;
    
    // Declaring two integer variables to be used in the fibonacci question.
    int fibInput;
    int finalFib;
    
    /*
    factorial
    This method recives a number from the user and calculates and returns the 
    factorial for that number. 
    Parameters: long
    Returns: long
    */
    public static long factorial (long factorialInput)
    {  
        for (long i = factorialInput - 1; i >= 1;  i = i - 1)
        {
            factorialInput = factorialInput * i;
        }
        return (factorialInput);
    }
    
    /*
    prime
    This method recives a number from the user and then calculates and returns
    whether or not that number is prime or not prime.
    Parameters: int
    Returns: boolean
    */
    public static boolean prime (int primeInput)
    {
        boolean isPrime = true;
        double temp;
        
        
        for (int i = 2; i <= primeInput / 2; i = i + 1)
        {
            temp = primeInput % i;
            
            if (temp == 0)
            {
                isPrime = false;
                break;
            }
        }
        return (isPrime);
    }
    
    /*
    fibonacci
    This method recives a number from the user, it then calculates and returns
    the corresponding fibonacci number of that number.
    Parameters: int
    Returns: int
    */
    public static int fibonacci (int fibonacciInput)
    {
        int previousFib = 0;
        int currentFib = 1;
        
        for (int i = 0; i < fibonacciInput - 2; i++)
        {
            int sum = previousFib + currentFib;
            previousFib = currentFib;
            currentFib = sum;
        }
        
        return (currentFib);
        
    }
    
    public FrmAlgorithm() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblTitle = new javax.swing.JLabel();
        lblInstructions1 = new javax.swing.JLabel();
        txtFactorial = new javax.swing.JTextField();
        lblFactorial = new javax.swing.JLabel();
        lblInstructions2 = new javax.swing.JLabel();
        txtPrime = new javax.swing.JTextField();
        lblPrime = new javax.swing.JLabel();
        lblInstructions3 = new javax.swing.JLabel();
        lblFibonacci = new javax.swing.JLabel();
        btnFactorial = new javax.swing.JButton();
        txtFib = new javax.swing.JTextField();
        btnPrime = new javax.swing.JButton();
        btnFibonacci = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblTitle.setFont(new java.awt.Font("DejaVu Sans", 1, 15)); // NOI18N
        lblTitle.setText("--Numbers--");

        lblInstructions1.setText("Enter a number a click the button to find the factorial:");

        lblFactorial.setText("-");

        lblInstructions2.setText("Enter a number and click the button to determine whether or not it is a prime number: ");

        lblPrime.setText("-");

        lblInstructions3.setText("Enter a number and click the button to see the corresponding fibonacci number:");

        lblFibonacci.setText("-");

        btnFactorial.setText("Factorial");
        btnFactorial.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFactorialActionPerformed(evt);
            }
        });

        btnPrime.setText("Prime");
        btnPrime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrimeActionPerformed(evt);
            }
        });

        btnFibonacci.setText("Fibonacci");
        btnFibonacci.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFibonacciActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(btnFactorial))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtPrime, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(btnPrime, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(txtFib, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110)
                        .addComponent(btnFibonacci)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblFibonacci, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(85, 85, 85))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(lblPrime, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(lblInstructions1))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblInstructions2))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(lblInstructions3)))
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblTitle)
                .addGap(257, 257, 257))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTitle)
                .addGap(34, 34, 34)
                .addComponent(lblInstructions1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFactorial, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblFactorial)
                    .addComponent(btnFactorial))
                .addGap(36, 36, 36)
                .addComponent(lblInstructions2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtPrime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPrime)
                    .addComponent(lblPrime))
                .addGap(20, 20, 20)
                .addComponent(lblInstructions3)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtFib, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnFibonacci)
                    .addComponent(lblFibonacci, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(30, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnFactorialActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFactorialActionPerformed
        
        /* Getting the inputted factorial num from user and storing it in a 
          variable. */
        factorialInput = Long.parseLong(txtFactorial.getText());
        
        /* Calling the factorial method, passing it the users input and storing
           the result in a variable. */
        factorial = factorial(factorialInput);
        
        // Outputting the factorial value to the GUI.
        lblFactorial.setText(String.valueOf(factorial));
        
    }//GEN-LAST:event_btnFactorialActionPerformed

    private void btnPrimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrimeActionPerformed
        
        /* Getting the inputted prime value from user and storing it in the 
           variable. */
        primeInput = Integer.parseInt(txtPrime.getText());
        
        /* Calling the prime method and passing it the inputted value from the 
           user. Also stroring the result in a variable. */
        prime = prime(primeInput);
        
        /* If the number inputted is prime, a message saying the number is prime
           will be displayed to the GUI. If it is not prime a message saying it
           is not prime will be displayed on the GUI. */
                   
        if (prime == true)
        {
            // Outputting "is a prime number" to GUI
            lblPrime.setText(String.valueOf(primeInput + " is a prime number"));
        }
        else
        {
            // Outputting "is not a prime number" to GUI.
            lblPrime.setText(String.valueOf(primeInput + " is not a prime "
                             + "number"));
        }
    }//GEN-LAST:event_btnPrimeActionPerformed

    private void btnFibonacciActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFibonacciActionPerformed
        
        /* Getting the inputted fib value from user and storing the result in a
           variable. */
        fibInput = Integer.parseInt(txtFib.getText());
        
        /* Calling the fiboonacci method and passing it the inputted fib number
           from user. Stroing the result in a variable. */
        finalFib = (fibonacci(fibInput));
        
        // Outputting the corresponding fib number to the GUI.
        lblFibonacci.setText(String.valueOf(finalFib));
    }//GEN-LAST:event_btnFibonacciActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmAlgorithm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmAlgorithm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFactorial;
    private javax.swing.JButton btnFibonacci;
    private javax.swing.JButton btnPrime;
    private javax.swing.JLabel lblFactorial;
    private javax.swing.JLabel lblFibonacci;
    private javax.swing.JLabel lblInstructions1;
    private javax.swing.JLabel lblInstructions2;
    private javax.swing.JLabel lblInstructions3;
    private javax.swing.JLabel lblPrime;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtFactorial;
    private javax.swing.JTextField txtFib;
    private javax.swing.JTextField txtPrime;
    // End of variables declaration//GEN-END:variables
}
